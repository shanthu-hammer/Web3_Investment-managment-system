{"ast":null,"code":"import '../logic/samplefile/file1.txt';\nimport '../logic/samplefile/file2.txt'; //import * as fs from 'fs';\n//const fs = require('fs');\n\nconst differenceGenerator = filePath => {\n  var fr = new FileReader();\n\n  fr.onload = function () {\n    //document.getElementById('output')\n    //.textContent=\n    let a = fr.result;\n    fr.readAsText();\n  };\n}; // var str1 = fs.readFileSync('file1', 'utf-8');\n// var str2 = fs.readFileSync('file2', 'utf-8');\n// var difference = fileDiff.diffLines(str1, str2);\n// console.log(difference);\n\n\nfunction FileHelper() {\n  FileHelper.readStringFromFileAtPath = function (pathOfFileToReadFrom) {\n    var request = new XMLHttpRequest();\n    request.open(\"GET\", pathOfFileToReadFrom, false);\n    request.send(null);\n    var returnValue = request.responseText;\n    return returnValue;\n  };\n}\n\n_c = FileHelper;\nexport default differenceGenerator();\n\nfunction previewFile() {\n  const content = document.querySelector('.content');\n  const [file] = document.querySelector('input[type=file]').files;\n  const reader = new FileReader();\n  reader.addEventListener(\"load\", () => {\n    // this will then display a text file\n    content.innerText = reader === null || reader === void 0 ? void 0 : reader.result;\n  }, false);\n\n  if (file) {\n    reader === null || reader === void 0 ? void 0 : reader.readAsText(file); //console.log(reader?.result)\n  }\n} //export  default previewFile(); \n\n\nvar _c;\n\n$RefreshReg$(_c, \"FileHelper\");","map":{"version":3,"names":["differenceGenerator","filePath","fr","FileReader","onload","a","result","readAsText","FileHelper","readStringFromFileAtPath","pathOfFileToReadFrom","request","XMLHttpRequest","open","send","returnValue","responseText","previewFile","content","document","querySelector","file","files","reader","addEventListener","innerText"],"sources":["C:/KTlearning/react-app/7/gradprj/itracker2.0/frontend/src/logic/differgenerator.js"],"sourcesContent":["import '../logic/samplefile/file1.txt';\r\nimport '../logic/samplefile/file2.txt';\r\n//import * as fs from 'fs';\r\n//const fs = require('fs');\r\n\r\nconst differenceGenerator =(filePath)=>{\r\n\r\n    var fr=new FileReader();\r\n    fr.onload=function(){\r\n        //document.getElementById('output')\r\n                //.textContent=\r\n                let a= fr.result;\r\n                fr.readAsText();\r\n    }\r\n}\r\n\r\n    // var str1 = fs.readFileSync('file1', 'utf-8');\r\n    // var str2 = fs.readFileSync('file2', 'utf-8');\r\n    // var difference = fileDiff.diffLines(str1, str2);\r\n    // console.log(difference);\r\n   \r\n    function FileHelper()\r\n\r\n    {\r\n        FileHelper.readStringFromFileAtPath = function(pathOfFileToReadFrom)\r\n        {\r\n            var request = new XMLHttpRequest();\r\n            request.open(\"GET\", pathOfFileToReadFrom, false);\r\n            request.send(null);\r\n            var returnValue = request.responseText;\r\n    \r\n            return returnValue;\r\n        }\r\n    }\r\n    \r\n\r\n\r\nexport default differenceGenerator();\r\n\r\n\r\n\r\n\r\n\r\nfunction previewFile() {\r\n    const content = document.querySelector('.content');\r\n    const [file] = document.querySelector('input[type=file]').files;\r\n    const reader = new FileReader();\r\n  \r\n    reader.addEventListener(\"load\", () => {\r\n      // this will then display a text file\r\n      content.innerText = reader?.result;\r\n      \r\n    }, false);\r\n  \r\n    if (file) {\r\n      reader?.readAsText(file);\r\n      //console.log(reader?.result)\r\n    }\r\n  }\r\n//export  default previewFile(); \r\n"],"mappings":"AAAA,OAAO,+BAAP;AACA,OAAO,+BAAP,C,CACA;AACA;;AAEA,MAAMA,mBAAmB,GAAGC,QAAD,IAAY;EAEnC,IAAIC,EAAE,GAAC,IAAIC,UAAJ,EAAP;;EACAD,EAAE,CAACE,MAAH,GAAU,YAAU;IAChB;IACQ;IACA,IAAIC,CAAC,GAAEH,EAAE,CAACI,MAAV;IACAJ,EAAE,CAACK,UAAH;EACX,CALD;AAMH,CATD,C,CAWI;AACA;AACA;AACA;;;AAEA,SAASC,UAAT,GAEA;EACIA,UAAU,CAACC,wBAAX,GAAsC,UAASC,oBAAT,EACtC;IACI,IAAIC,OAAO,GAAG,IAAIC,cAAJ,EAAd;IACAD,OAAO,CAACE,IAAR,CAAa,KAAb,EAAoBH,oBAApB,EAA0C,KAA1C;IACAC,OAAO,CAACG,IAAR,CAAa,IAAb;IACA,IAAIC,WAAW,GAAGJ,OAAO,CAACK,YAA1B;IAEA,OAAOD,WAAP;EACH,CARD;AASH;;KAZQP,U;AAgBb,eAAeR,mBAAmB,EAAlC;;AAMA,SAASiB,WAAT,GAAuB;EACnB,MAAMC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAhB;EACA,MAAM,CAACC,IAAD,IAASF,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,EAA2CE,KAA1D;EACA,MAAMC,MAAM,GAAG,IAAIpB,UAAJ,EAAf;EAEAoB,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,MAAM;IACpC;IACAN,OAAO,CAACO,SAAR,GAAoBF,MAApB,aAAoBA,MAApB,uBAAoBA,MAAM,CAAEjB,MAA5B;EAED,CAJD,EAIG,KAJH;;EAMA,IAAIe,IAAJ,EAAU;IACRE,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEhB,UAAR,CAAmBc,IAAnB,EADQ,CAER;EACD;AACF,C,CACH"},"metadata":{},"sourceType":"module"}
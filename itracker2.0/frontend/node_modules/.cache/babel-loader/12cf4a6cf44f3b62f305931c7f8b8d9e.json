{"ast":null,"code":"import '../logic/samplefile/file1.txt';\nimport '../logic/samplefile/file2.txt'; //import * as fs from 'fs';\n//const fs = require('fs');\n\nconst differenceGenerator = filePath => {\n  var fr = new FileReader();\n\n  fr.onload = function () {\n    //document.getElementById('output')\n    //.textContent=\n    fr.result;\n  };\n}; // var str1 = fs.readFileSync('file1', 'utf-8');\n// var str2 = fs.readFileSync('file2', 'utf-8');\n// var difference = fileDiff.diffLines(str1, str2);\n// console.log(difference);\n\n\nfunction FileHelper() {\n  FileHelper.readStringFromFileAtPath = function (pathOfFileToReadFrom) {\n    var request = new XMLHttpRequest();\n    request.open(\"GET\", pathOfFileToReadFrom, false);\n    request.send(null);\n    var returnValue = request.responseText;\n    return returnValue;\n  };\n}\n\n_c = FileHelper;\nexport default differenceGenerator(); // async function example() {\n//     const client = new ftp.Client();\n//     client.ftp.verbose = true;\n//     try {\n//         await client.access({\n//             host: config.ftpHost,\n//             port: config.ftpPort,\n//             user: config.ftpUser,\n//             password: config.ftpPassword,\n//             secure: config.ftpSecure,\n//         });\n//         await client.downloadTo(LocalSaveOld, ServerLog);\n//         if (fs.existsSync(LocalSaveOld)) {\n//             fs.readFile(LocalSaveOld, function (err, data1) {\n//                 console.log(data1);\n//                 fs.readFile(LocalSaveNew, function (err, data2) {\n//                     console.log(data2);\n//                     var difference = fileDiff.diffLines(data1, data2);\n//                     console.log(difference);\n//                 });\n//             });\n//             await fs.rename(LocalSaveOld, LocalSaveNew, function (err) {\n//                 console.log(\"old was copied to new\");\n//                 if (err) console.log(\"ERROR: \" + err);\n//             });\n//         }\n//     } catch (error) {\n//         console.log(\"FTP ERROR\");\n//         client.close();\n//     }\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"FileHelper\");","map":{"version":3,"names":["differenceGenerator","filePath","fr","FileReader","onload","result","FileHelper","readStringFromFileAtPath","pathOfFileToReadFrom","request","XMLHttpRequest","open","send","returnValue","responseText"],"sources":["C:/KTlearning/react-app/7/gradprj/itracker2.0/frontend/src/logic/differgenerator.js"],"sourcesContent":["import '../logic/samplefile/file1.txt';\r\nimport '../logic/samplefile/file2.txt';\r\n//import * as fs from 'fs';\r\n//const fs = require('fs');\r\n\r\nconst differenceGenerator =(filePath)=>{\r\n\r\n    var fr=new FileReader();\r\n    fr.onload=function(){\r\n        //document.getElementById('output')\r\n                //.textContent=\r\n                fr.result;\r\n    }\r\n}\r\n\r\n    // var str1 = fs.readFileSync('file1', 'utf-8');\r\n    // var str2 = fs.readFileSync('file2', 'utf-8');\r\n    // var difference = fileDiff.diffLines(str1, str2);\r\n    // console.log(difference);\r\n   \r\n    function FileHelper()\r\n\r\n    {\r\n        FileHelper.readStringFromFileAtPath = function(pathOfFileToReadFrom)\r\n        {\r\n            var request = new XMLHttpRequest();\r\n            request.open(\"GET\", pathOfFileToReadFrom, false);\r\n            request.send(null);\r\n            var returnValue = request.responseText;\r\n    \r\n            return returnValue;\r\n        }\r\n    }\r\n    \r\n\r\n\r\nexport default differenceGenerator();\r\n\r\n\r\n// async function example() {\r\n//     const client = new ftp.Client();\r\n//     client.ftp.verbose = true;\r\n\r\n//     try {\r\n//         await client.access({\r\n//             host: config.ftpHost,\r\n//             port: config.ftpPort,\r\n//             user: config.ftpUser,\r\n//             password: config.ftpPassword,\r\n//             secure: config.ftpSecure,\r\n//         });\r\n//         await client.downloadTo(LocalSaveOld, ServerLog);\r\n\r\n//         if (fs.existsSync(LocalSaveOld)) {\r\n//             fs.readFile(LocalSaveOld, function (err, data1) {\r\n//                 console.log(data1);\r\n//                 fs.readFile(LocalSaveNew, function (err, data2) {\r\n//                     console.log(data2);\r\n//                     var difference = fileDiff.diffLines(data1, data2);\r\n//                     console.log(difference);\r\n//                 });\r\n//             });\r\n\r\n//             await fs.rename(LocalSaveOld, LocalSaveNew, function (err) {\r\n//                 console.log(\"old was copied to new\");\r\n//                 if (err) console.log(\"ERROR: \" + err);\r\n//             });\r\n//         }\r\n//     } catch (error) {\r\n//         console.log(\"FTP ERROR\");\r\n//         client.close();\r\n//     }\r\n// }"],"mappings":"AAAA,OAAO,+BAAP;AACA,OAAO,+BAAP,C,CACA;AACA;;AAEA,MAAMA,mBAAmB,GAAGC,QAAD,IAAY;EAEnC,IAAIC,EAAE,GAAC,IAAIC,UAAJ,EAAP;;EACAD,EAAE,CAACE,MAAH,GAAU,YAAU;IAChB;IACQ;IACAF,EAAE,CAACG,MAAH;EACX,CAJD;AAKH,CARD,C,CAUI;AACA;AACA;AACA;;;AAEA,SAASC,UAAT,GAEA;EACIA,UAAU,CAACC,wBAAX,GAAsC,UAASC,oBAAT,EACtC;IACI,IAAIC,OAAO,GAAG,IAAIC,cAAJ,EAAd;IACAD,OAAO,CAACE,IAAR,CAAa,KAAb,EAAoBH,oBAApB,EAA0C,KAA1C;IACAC,OAAO,CAACG,IAAR,CAAa,IAAb;IACA,IAAIC,WAAW,GAAGJ,OAAO,CAACK,YAA1B;IAEA,OAAOD,WAAP;EACH,CARD;AASH;;KAZQP,U;AAgBb,eAAeN,mBAAmB,EAAlC,C,CAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}